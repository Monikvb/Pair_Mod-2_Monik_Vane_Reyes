Pair programming Creaci칩n BBDD
	
En esta sesi칩n crearemos una nueva BBDD desde 0 游눩游낗! Supongamos que tenemos una tienda de zapatillas y que durante mucho tiempo hemos ido recopilando mucha informaci칩n sobre nuestros empleados, las zapatillas que tenemos, los clientes y todas las facturas que hemos emitido. 
Nuestra informaci칩n puede que este un poco desordenada y empieza a ser un poco complicado gestionar toda esa informaci칩n, por lo que hemos decidido crearnos una BBDD en SQL. 
Para ello crearemos 4 tablas en la BBDD:

	-Empleados
	-Clientes
	-Facturas
	-Zapatillas

La tabla Facturas tiene una relaci칩n con la tabla Empleados y la tabla Clientes y la tabla Zapatillas. Estas tres 칰ltimas no tienen ninguna relaci칩n entre ellas.
Antes de nada para poder empezar este ejercicio deberemos crear la base de datos, para ello deberemos escribir:

CREATE SCHEMA `tienda_zapatillas`;
USE `tienda_zapatillas`;

De esta forma habremos creado la base de datos que necesitamos y la habremos seleccionado, antes de poder empezar a crear las tablas.

Car치cteristicas de nuestras tablas
	
Tabla Zapatillas: tiene 3 columnas: id_zapatilla, modelo, color con las siguientes caracter칤sticas:
	id_zapatilla: es una clave primaria de tipo int, autoincremental y no nula.
	modelo: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	color: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
Tabla Clientes: tiene 9 columnas id_cliente, nombre, numero_telefono, email, direccion, ciudad, provincia, pais, codigo_postal con las siguientes caracter칤sticas:
	id_cliente: es una clave primaria de tipo int, autoincremental y no nula.
	nombre: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	numero_telefono: es integer, no nula.
	email: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	direccion: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	ciudad: es una cadena de caracteres de longitud m치xima de 45 caracteres, puede ser nula.
	provincia: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	pais: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	codigo_postal: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
Tabla Empleados: tiene 5 columnas id_empleado, nombre, tienda, salario, fecha_incorporacion con las siguientes caracter칤sticas:
	id_empleado: es una clave primaria de tipo int, autoincremental y no nula.
	nombre: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	tienda: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	salario: es int, puede ser nula.
	fecha_incorporacion: es una columna de tipo date, no nula.
Tabla Facturas: tiene 6 columnas id_factura ,numero de factura, fecha, id_empleado, id_cliente, id_zapatilla, con las siguientes caracter칤sticas:
	id_factura: es una clave primaria de tipo int, autoincremental y no nula.
	numero_factura: es una cadena de caracteres de longitud m치xima de 45 caracteres, no nula.
	fecha: es una columna de tipo date, no nula.
	id_zapatilla: es una clave for치nea de tipo int, no nula
	id_empleado: es una clave for치nea de tipo int, no nula.
	id_cliente: es una clave for치nea de tipo int, no nula.

游늷 NOTA En esta 칰ltima tabla tendremos que incluir todos los CONSTRAINTnecesarios para establecer los relaciones entre las tablas, donde tendremos que especificar:
Foreign Key
References
游늷 NOTA Este ejercicio es incremental, es decir, cada d칤a vamos a ir a침adiendo las nuevas funcionalidades que hemos aprendido.

_________________________________________
# C칩digo en SQL


CREATE SCHEMA tienda_zapatillas;
USE tienda_zapatillas;


CREATE TABLE Zapatillas (
Id_zapatillas INT NOT NULL AUTO_INCREMENT,
Modelo VARCHAR(45) NOT NULL,
Color VARCHAR(45) NOT NULL,
PRIMARY KEY (Id_zapatillas)
);

CREATE TABLE Clientes(
Id_clientes INT NOT NULL AUTO_INCREMENT,
Nombre VARCHAR(45) NOT NULL,
N칰mero_Tel칠fono INT NOT NULL,
Email VARCHAR (45) NOT NULL,
Direcci칩n VARCHAR (45) NOT NULL,
Ciudad VARCHAR (45) NOT NULL,
Provincia VARCHAR (45) NOT NULL,
Pa칤s VARCHAR (45) NOT NULL,
C칩digo_postal VARCHAR (45) NOT NULL,
PRIMARY KEY (Id_clientes)
);

CREATE TABLE Empleados(
Id_empleado INT NOT NULL AUTO_INCREMENT,
Nombre VARCHAR(45) NOT NULL,
Tienda VARCHAR(45) NOT NULL,
Salario FLOAT,
Fecha_incorporaci칩n DATE NOT NULL,
PRIMARY KEY (Id_empleado)
);


CREATE TABLE Facturas(
Id_Factura INT NOT NULL AUTO_INCREMENT,
N칰mero_factura VARCHAR(45) NOT NULL,
Fecha DATE NOT NULL,
Id_zapatillas INT NOT NULL,
Id_empleado INT NOT NULL,
Id_clientes INT NOT NULL,
PRIMARY KEY (Id_factura),
CONSTRAINT fk_zapatilla
	FOREIGN KEY (Id_zapatillas)
    REFERENCES Zapatillas (Id_zapatillas) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT fk_empleado
	FOREIGN KEY (Id_empleado)
    REFERENCES Empleados (Id_empleado) ON DELETE CASCADE ON UPDATE CASCADE,
CONSTRAINT fk_clientes
	FOREIGN KEY (Id_clientes)
    REFERENCES Clientes (Id_clientes) ON DELETE CASCADE ON UPDATE CASCADE
);
